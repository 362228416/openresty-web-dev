worker_processes  3;

error_log logs/error.log notice;

events {
    worker_connections 1024;
}

http {
    lua_package_path "$prefix/lua/?.lua;$prefix/lualib/?.lua";

    lua_shared_dict task 1m;
    init_worker_by_lua_block {
        local task = ngx.shared.task
        local time = 2
        local count = task:incr("invoke", 1, 0)
        if count == 1 then
            local timer_at = ngx.timer.at
            function do_some_thing()
                print("do some thing")
                timer_at(time, do_some_thing)
            end
            timer_at(time, do_some_thing)
            timer_at(5, function()
                task:set("invoke", 0)
            end
            )
        end
    }

    server {
        listen 8888;
        server_name localhost;
        lua_code_cache off;

        location / {
            default_type text/html;
            content_by_lua_block {
                ngx.say('定时任务')
            }
        }
    }
}